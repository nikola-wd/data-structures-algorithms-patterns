1. bubbleSort (sinkingSort)
2. quickSort
2.1. 3WayQuickSort - https://www.geeksforgeeks.org/3-way-quicksort-dutch-national-flag/
3. mergeSort
4. insectionSort
5. selectionSort
6. radixSort
7. shellSort
8. gnomeSort ?
9. coctailShakerSort (variation of bubbleSort: also known as: Bidirectional Bubble Sort or simply Cocktail Sort.) ? - https://stackabuse.com/bubble-sort-and-cocktail-shaker-sort-in-javascript/
10. heapSort - https://stackabuse.com/heap-sort-in-javascript/



Comparison:
bubbleSort: O(n^2) - slowest - used primarilly as an educational tool
selectionSort: O(n^2) - same number of comparisons, but fewer exchanges than bubbleSort 
quickSort: O(log n)
mergeSort: O(log n) faster than quickSort


A sequential search is O(n) for ordered and unordered lists.

A binary search of an ordered list is O(logn) in the worst case.

Hash tables can provide constant time searching.

A bubble sort, a selection sort, and an insertion sort are O(n2) algorithms.

A Shell sort improves on the insertion sort by sorting incremental sublists. It falls between O(n) and O(n2).

A merge sort is O(nlogn), but requires additional space for the merging process.

A quick sort is O(nlogn), but may degrade to O(n2) if the split points are not near the middle of the list. It does not require additional space.



Insertion sort, however, can be faster than Selection Sort in case the collection is almost sorted. And Insertion Sort is pretty much unbeaten with short collections.
